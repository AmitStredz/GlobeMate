# Generated by Django 5.2.2 on 2025-09-03 12:47

from django.db import migrations


def add_missing_geographies(apps, schema_editor):
    """Add all the geography types that are in frontend but missing in backend"""
    Geography = apps.get_model('preferences', 'Geography')

    # Geography types from frontend that are missing in backend
    MISSING_GEOGRAPHIES = [
        ('SEA', 'Sea', 'sea', 'Coastal waters, seas, and marine environments'),
        ('SPR', 'Spring', 'spring', 'Natural springs and water sources'),
        ('REEF', 'Reef', 'reef', 'Coral reefs and underwater formations'),
        ('HTSPR', 'Hot Spring', 'hot_spring', 'Natural hot springs and thermal waters'),
        ('GEYSER', 'Geyser', 'geyser', 'Natural geysers and geothermal features'),
        ('WTR', 'Water Body', 'water_body', 'General water bodies, rivers, and streams'),
        ('PEAK', 'Mountain Peak', 'peak', 'Mountain peaks and summits'),
        ('GLCR', 'Glacier', 'glacier', 'Glaciers and ice formations'),
        ('CLFF', 'Cliff', 'cliff', 'Cliffs and rocky escarpments'),
        ('ROCK', 'Rock Formation', 'rock_formation', 'Unique rock formations and geological features'),
        ('CAVE', 'Cave Entrance', 'cave', 'Caves and underground formations'),
        ('MNTN', 'Mountain Region', 'mountain_region', 'Mountain ranges and highland regions'),
        ('DUNE', 'Sand Dune', 'sand_dune', 'Sand dunes and desert formations'),
        ('SAND', 'Sandy Area', 'sandy_area', 'Sandy beaches and desert areas'),
        ('PRTA', 'Protected Area', 'protected_area', 'Protected natural areas and reserves'),
        ('NTLPRK', 'National Park', 'national_park', 'National parks and government-protected areas'),
        ('NTRL', 'Natural Area', 'natural_area', 'General natural and wilderness areas'),
    ]
    
    # Create the missing geography types
    for code, name, api_code, description in MISSING_GEOGRAPHIES:
        Geography.objects.get_or_create(
            code=code,
            defaults={
                'name': name,
                'api_code': api_code,
                'description': description
            }
        )


def remove_missing_geographies(apps, schema_editor):
    """Reverse migration - remove the added geography types"""
    Geography = apps.get_model('preferences', 'Geography')
    
    # Codes to remove
    codes_to_remove = [
        'SEA', 'SPR', 'REEF', 'HTSPR', 'GEYSER', 'WTR', 'PEAK', 'GLCR',
        'CLFF', 'ROCK', 'CAVE', 'MNTN', 'DUNE', 'SAND', 'PRTA', 'NTLPRK', 'NTRL'
    ]
    
    Geography.objects.filter(code__in=codes_to_remove).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('preferences', '0003_merge_0002_auto_20250902_0809_0002_load_initial_data'),
    ]

    operations = [
        migrations.RunPython(add_missing_geographies, remove_missing_geographies),
    ]
